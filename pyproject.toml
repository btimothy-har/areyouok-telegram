[project]
name = "areyouok-telegram"
version = "0.3.4"
description = "Your empathic companion for everyday life. Here to listen, support & help 24/7."
requires-python = ">=3.12"
dependencies = []

[project.scripts]
generate-salt = "areyouok_telegram.cli:generate_salt"
reset-db = "areyouok_telegram.cli:reset_db"
simulate = "areyouok_telegram.cli:simulate"

[dependency-groups]
application = [
    "python-dotenv==1.1.1",
    "pydantic~=2.11.7",
    "uvloop~=0.21.0",
    "python-telegram-bot~=22.3",
    "python-telegram-bot[job-queue]",
    "sqlalchemy~=2.0.41",
    "greenlet",
    "psycopg2~=2.9.10",
    "asyncpg~=0.30.0",
    "tenacity~=8.2.3",
    "logfire~=4.3.6",
    "logfire[sqlalchemy]",
    "logfire[system-metrics]",
    "pydantic-ai~=1.0.10",
    "pydantic-evals[logfire]",
    "python-magic~=0.4.27",
    "openai~=1.107.0",
    "pydub~=0.25.1",
    "cryptography~=44.0.0",
    "cachetools~=5.5.0",
    "pycountry>=24.6.1",
    "genai-prices~=0.0.27",
    "llama-index-core~=0.14.4",
    "llama-index-vector-stores-postgres",
    "llama-index-embeddings-openai",
    "aiolimiter~=1.2.0",
]
dev = [
    "ruff~=0.13.1",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.14.0",
    "pytest-cov>=5.0.0",
    "httpx>=0.28.0",
    "factory-boy>=3.3.0",
    "freezegun>=1.5.2",
]
cli = [
    "click~=8.1.0",
    "rich~=13.9.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/areyouok_telegram"]

[tool.uv]
required-version = "~=0.8.18"
default-groups = ["application", "dev", "cli"]

[tool.ruff]
required-version = "~=0.13.1"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    "A", # flake8-builtins
    "ARG", # flake8-unused-arguments
    "ASYNC", # flake8-async
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "E", # Pycodestyle
    "FBT", # flake8-boolean-trap
    "F", # Pyflakes
    "ICN", # import-convention
    "I", # isort
    "N", # pep8-naming
    "PERF", # Perflint
    "PLC", # Pylint-Convention
    "PLE", # Pylint-Error
    "PLW", # Pylint-Warning
    "Q", # flake8-quotes
    "TRY", # tryceratops
    "UP", # pyupgrade
    "W", # Pycodestyle
    "YTT", # flake8-2020
]

[tool.ruff.lint.isort]
combine-as-imports = true
force-single-line = true
detect-same-package = true

[tool.logfire]
ignore_no_config=true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["tests.py", "test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers"
]
asyncio_mode = "auto"
pythonpath = ["src"]

[tool.coverage.run]
source = ["src/areyouok_telegram"]
branch = true
parallel = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/utils.py",
    "*/app.py",
    "*/config.py",
    "*/main.py",
    "**/exceptions.py",
    "*/llms/chat/responses.py",
    "*/llms/context_compression/constants.py",
    "*/research/**",
    "*/setup/**",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
